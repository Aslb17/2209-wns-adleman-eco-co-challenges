{
  "name": "ecoco-challenge",
  "version": "1.0.0",
  "description": "",
  "scripts": {
    "integration-tests": "docker compose -f docker-compose.integration-tests.yml up --build --exit-code-from testrunner",
    "integration-tests:backend-only": "docker compose -f docker-compose.integration-tests.yml up testDB backend",
    "e2e-tests": "docker compose -f docker-compose.e2e-tests.yml up --build --exit-code-from testrunner",
    "start": "docker compose -f docker-compose.yml up --build",
    "start:prod": "docker compose -f docker-compose.production.yml pull && docker compose -f docker-compose.production.yml up",
    "start:staging": "docker compose -f docker-compose.staging.yml pull && docker compose -f docker-compose.staging.yml up",
    "publish:server": "cd server && docker build -f Dockerfile.production . -t ecocochallenge/ecocochallenge-server && docker push ecocochallenge/ecocochallenge-server && cd ..",
    "publish:client": "cd client && docker build -f Dockerfile.production -t ecocochallenge/ecocochallenge-client . && docker push ecocochallenge/ecocochallenge-client && cd ..",
    "publish-staging:server": "cd server && docker build -f Dockerfile.production . -t ecocochallenge/ecocochallenge-server:staging && docker push ecocochallenge/ecocochallenge-server:staging && cd ..",
    "publish-staging:client": "cd client && docker build -f Dockerfile.production -t ecocochallenge/ecocochallenge-client:staging . && docker push ecocochallenge/ecocochallenge-client:staging && cd ..",
    "pgadmin": "docker run --name pgadmin -p 5050:80 --env PGADMIN_DEFAULT_EMAIL=root@app.com --env PGADMIN_DEFAULT_PASSWORD=root dpage/pgadmin4 -d"
  },
  "repository": {
    "type": "git",
    "url": "git+https://github.com/WildCodeSchool/2209-wns-adleman-eco-co-challenges.git"
  },
  "author": "",
  "license": "ISC",
  "bugs": {
    "url": "https://github.com/WildCodeSchool/2209-wns-adleman-eco-co-challenges/issues"
  },
  "devDependencies": {
    "@playwright/test": "^1.32.3"
  }
}
