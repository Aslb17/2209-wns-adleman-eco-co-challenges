services:
  db:
    image: postgres:15-alpine
    restart: always
    environment:
      POSTGRES_PASSWORD: postgres
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -d postgres -U postgres"]
      interval: 5s
      timeout: 5s
      retries: 10

  backend:
    depends_on:
      db:
        condition: service_healthy
    build: "./server"
    ports:
      - 4000:4000
    volumes:
      - ./server/src:/app/src
    environment:
      DB_HOST: "db"
      CHOKIDAR_USEPOLLING: "true"
    healthcheck:
      test: 'curl --fail --request GET -H ''content-type:application/json'' --url ''http://localhost:4000/graphql?query=%7B__typename%7D'''
      interval: 5s
      timeout: 5s
      retries: 10
  testrunner:
    build: ./tests
    depends_on:
      backend:
        condition: service_healthy
    volumes:
      - ./server:/app/server
      - ./.git:/app/.git
      - ./tests/src:/app/src